
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vpgtwgfsgitgkmudigha.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZwZ3R3Z2ZzZ2l0Z2ttdWRpZ2hhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyNzk1MTksImV4cCI6MjA1OTg1NTUxOX0.heKuH7ajFsTiGzJXXdNVodGfIzawBPMuMh3S9aoqdNo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Store original fetch for later restoration
const originalFetch = globalThis.fetch;

// Function to set custom auth for business users
export const setSupabaseBusinessAuth = (businessUserId: string) => {
  console.log('Setting business user auth for:', businessUserId);
  
  // Store original fetch if not already stored
  if (!(globalThis as any).__originalFetch) {
    (globalThis as any).__originalFetch = originalFetch;
  }
  
  // Replace global fetch with our interceptor
  globalThis.fetch = async (input, init) => {
    const url = typeof input === 'string' ? input : input instanceof URL ? input.href : input.url;
    
    // Only intercept Supabase API requests
    if (url.includes(SUPABASE_URL)) {
      init = init || {};
      init.headers = init.headers || {};
      
      // Add our custom header for business user authentication
      (init.headers as Record<string, string>)['business-user-id'] = businessUserId;
      
      console.log('Intercepted Supabase request:', { 
        url, 
        businessUserId,
        hasHeaders: !!init.headers
      });
    }
    
    return originalFetch(input, init);
  };
  
  // Mark that we've set up the fetch interceptor
  (globalThis as any).__supabaseFetchInterceptor = true;
  
  console.log('Business user auth setup complete');
};

// Function to clear custom auth
export const clearSupabaseBusinessAuth = () => {
  console.log('Clearing business user auth');
  
  // Reset fetch to its original implementation if we've modified it
  if ((globalThis as any).__supabaseFetchInterceptor) {
    globalThis.fetch = (globalThis as any).__originalFetch;
    delete (globalThis as any).__originalFetch;
    delete (globalThis as any).__supabaseFetchInterceptor;
    
    console.log('Fetch interceptor cleared');
  }
};

